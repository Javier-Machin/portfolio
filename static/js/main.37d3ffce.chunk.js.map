{"version":3,"sources":["components/Header.js","components/Navbar.js","components/About.js","components/Projects.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","header","_templateObject","Header","react_default","a","createElement","id","Component","Navbar","NavContainer","nav","Navbar_templateObject","this","props","navPosition","anchor_link_default","style","styles","home","offset","href","about","projects","contact","ImgContainer","div","About_templateObject","AboutText","p","_templateObject2","About","AboutContainer","section","_templateObject3","aboutPadding","aboutHeight","ProjectsContainer","Projects_templateObject","ProjectDetailed","Projects_templateObject2","Project","Projects_templateObject3","Projects","docHeight","navOffset","aboutOffset","projectstOffset","contactOffset","ContactContainer","Contact_templateObject","Contact","updateOffsets","document","getElementById","offsetTop","MainContainer","App_templateObject","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","color","handleScroll","bind","assertThisInitialized","documentElement","scrollHeight","console","log","window","pageYOffset","setState","_this2","addEventListener","components_Header","components_Navbar","components_About","components_Projects","components_Contact","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37d3ffce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst HeaderContainer = styled.header`\n  text-transform: uppercase;\n  background-color: orangered;\n  color: green;\n  height: 100vh;\n`\n\nclass Header extends Component {\n  render() {\n    return (\n      <HeaderContainer id=\"header\">\n        Header\n      </HeaderContainer>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport styled from 'styled-components';\n\n\nclass Navbar extends Component {\n\n  render() {\n\n    const NavContainer = styled.nav`\n      text-transform: uppercase;\n      background-color: brown;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      position: ${this.props.navPosition};\n      top: 0;\n      width: 100%;\n      color: violet;\n      height: 5rem;\n    `; \n\n    return (\n      <NavContainer id=\"navbar\">\n        <AnchorLink \n          style={this.props.styles.home} \n          offset='50' \n          href='#header'>\n          HOME\n        </AnchorLink>\n        <AnchorLink \n          style={this.props.styles.about} \n          offset='50' \n          href='#about'>\n          ABOUT\n        </AnchorLink>\n        <AnchorLink \n          style={this.props.styles.projects} \n          offset='50' \n          href='#projects'>\n          PROJECTS\n        </AnchorLink>\n        <AnchorLink \n          style={this.props.styles.contact} \n          offset='50' \n          href='#contact'>\n          CONTACT\n        </AnchorLink>\n      </NavContainer>\n    );\n  }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ImgContainer = styled.div`\n  padding: 3rem 2rem;\n`;\n\nconst AboutText = styled.p`\n  text-transform: uppercase;\n  color: green;\n  padding: 3rem 2rem;\n  text-align: left;\n`\n\nclass About extends Component {\n  render() {\n\n    const AboutContainer = styled.section`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: lightblue;\n      padding: ${this.props.aboutPadding};\n      height: ${this.props.aboutHeight};\n    `;\n\n    return (\n      <AboutContainer id=\"about\">\n        <ImgContainer>img container</ImgContainer>\n        <AboutText>\n          aboutme text\n        </AboutText>\n      </AboutContainer>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst ProjectsContainer = styled.section`\n  display: grid;\n  grid-template-areas:\n    \"det det det\"\n    \"det det det\"\n    \"1fr 1fr 1fr\"\n    \"1fr 1fr 1fr\";\n  align-items: center;\n  background-color: pink;\n  width: 100%;\n  height: 85rem;\n  margin: 0 auto;\n  padding: 7rem 35rem;\n`;\n\nconst ProjectDetailed = styled.div`\n  grid-area: det;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Project = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: lightgreen;\n  border: 1px solid black;\n`\n\nclass Projects extends Component {\n  render() {\n    return (\n      <ProjectsContainer id=\"projects\">\n        <ProjectDetailed>\n          Project Detailed\n        </ProjectDetailed>\n        <Project>Project</Project>\n        <Project>Project</Project>\n        <Project>Project</Project>\n        <Project>Project</Project>\n        <Project>Project</Project>\n        <Project>Project</Project>\n      </ProjectsContainer>\n    );\n  }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst ContactContainer = styled.header`\n  text-transform: uppercase;\n  background-color: rgb(20,20,20);\n  color: rgb(250,250,250);\n  height: 50rem;\n`\n\nclass Contact extends Component {\n  render() {\n    return (\n      <ContactContainer id=\"contact\">\n        Contact\n      </ContactContainer>\n    );\n  }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport './css/App.css';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\n\nlet docHeight;\nlet navOffset;\nlet aboutOffset;\nlet projectstOffset;\nlet contactOffset;\n\nfunction updateOffsets() { \n  navOffset = document.getElementById(\"navbar\").offsetTop;\n  aboutOffset = document.getElementById(\"about\").offsetTop;\n  projectstOffset = document.getElementById(\"projects\").offsetTop;\n  contactOffset = document.getElementById(\"contact\").offsetTop;\n};\n\nconst MainContainer = styled.div`\n  text-align: center;\n  color: blue;\n  font-size: 3rem;\n  background-color: palevioletred;\n`;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      navPosition: \"static\",\n      aboutHeight: \"60rem\",\n      aboutPadding: \"10rem 5rem 10rem 5rem\",\n      styles: {\n        home: {color: \"green\"},\n        about: {},\n        projects: {},\n        contact: {}\n      }\n    };\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleScroll() {\n    let state = this.state;\n\n    if (docHeight !== document.documentElement.scrollHeight) {\n      docHeight = document.documentElement.scrollHeight; \n      updateOffsets();\n      console.log(\"updated offsets\"); \n    };\n    \n    if (window.pageYOffset >= aboutOffset - 50) {\n      state.navPosition = \"fixed\";\n      state.aboutHeight = \"65rem\";\n      state.aboutPadding = \"15rem 5rem 10rem 5rem\";\n    } else {\n      state.navPosition = \"static\";\n      state.aboutHeight = \"60rem\";\n      state.aboutPadding = \"10rem 5rem 10rem 5rem\";\n    }\n\n    if (window.pageYOffset <= navOffset - 53) {\n      state.styles.home = {color: \"green\"};\n      state.styles.about = {};\n    } else if (window.pageYOffset >= contactOffset - 420) {\n      state.styles.projects = {};\n      state.styles.contact = {color: \"green\"};\n    } else if (window.pageYOffset >= projectstOffset - 120) {\n      state.styles.about = {};\n      state.styles.projects = {color: \"green\"};\n      state.styles.contact = {};\n    } else if (window.pageYOffset >= navOffset - 120) {\n      state.styles.home = {};\n      state.styles.about = {color: \"green\"};\n      state.styles.projects = {};\n    }\n\n    this.setState(state);\n  }\n\n  componentDidMount() {    \n    updateOffsets();\n\n    window.addEventListener('scroll', () => {\n      this.handleScroll();\n    });\n  }\n\n  render() {\n    return (\n      <MainContainer>\n        <Header />\n        <Navbar navPosition={this.state.navPosition} styles={this.state.styles} />\n        <About aboutHeight={this.state.aboutHeight} aboutPadding={this.state.aboutPadding} />\n        <Projects />\n        <Contact />\n      </MainContainer>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}